/* Base styles */
:root {
  --yellow: #ffc600;
  --black: #272727;
}

::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar:horizontal {
      display: none;
}

::-webkit-scrollbar-thumb {
  box-shadow: inset 0 0 6px rgba(0,0,0,0.33);
  border-radius: 2px;
}

::-webkit-scrollbar-track:horizontal {
      display: none;
}

::-webkit-scrollbar-button {
  display: none;
}

::-webkit-scrollbar-track {
  box-shadow: inset 0 0 6px rgba(0,0,0,0.03);
  border-radius: 2px;
}

@font-face {
  font-family: digits;
  src: url(./assets/fonts/nk57-monospace-cd-rg.ttf);
}

html {
  /* border-box box model allows us to add padding and border to our elements without increasing their size */
  box-sizing: border-box;
  /* A system font stack so things load nice and quick! */
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica,
    Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-weight: 900;
  font-size: 10px;
  color: var(--black);
  text-shadow: 0 2px 0 rgba(0, 0, 0, 0.07);
}

/*
  WAT IS THIS?!
  We inherit box-sizing: border-box; from our <html> selector
  Apparently this is a bit better than applying box-sizing: border-box; directly to the * selector
*/
*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  background-image: url("./assets/blockwall.png");
  background-size: 340px, auto;
  overflow: hidden;
  min-height: calc(100vh - 20px);
  margin: 10px;
  /* background: white; */
  background-attachment: fixed;
  letter-spacing: -1px;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0 0 5px 0;
}

/* Each item in our grid will contain numbers */
.item {
  /* We center the contents of these items. You can also do this with flexbox too! */
  display: grid;
  justify-content: center;
  align-items: center;
  border: 5px solid rgba(0, 0, 0, 0.03);
  border-radius: 6px;
  font-size: 35px;
  color: white;
  background-color: rgba(255, 255, 255, 0.03)
}

.item p {
  font-size: 16px;
  margin: 0;
  color: white;
}

.item #cbh,#cbs,#clt,#cgp {
  font-size: 18px;
  margin: 2px 0 2px 0;
  border: 0px solid rgba(0, 0, 0, 0.03);
  border-radius: 0px;
}

/* top-level app layout */
.container {
  display: grid;
  grid-gap: 7px;
}

.unlocked {
  grid-template-columns: 6fr 4fr 120px;
  grid-template-rows: 100px 1fr;
  grid-template-areas: 
  "address state state"
  "list list action";
}

.locked {
  grid-template-columns: 1fr;
  grid-template-rows: 20px 1fr;
  grid-template-areas: 
  "state"
  "list";
}

.state {
  position: relative;
  width: 100%;
  grid-area: state;
  display: grid;
}

.sunlocked {
  grid-template-columns: 2fr 2fr 3fr 1fr;
  grid-template-rows: 1fr 1fr;
  grid-template-areas: 
  "tblockheight tblockstamp tlocaltime tgasprice"
  "blockheight  blockstamp localtime  gasprice";
}

.slocked {
  grid-template-columns: 120px 1fr 120px 1fr 120px 3fr 120px 1fr;
  grid-template-rows: 1fr;
  grid-template-areas: 
  "tblockheight blockheight tblockstamp blockstamp tlocaltime localtime tgasprice gasprice";
}

.tblockheight {
  border: 2px solid white;
  border-right: 0px;
  border-radius: 0px;
  grid-area: tblockheight;
  background-color: rgb(34, 169, 202);
  height: 100%;
  width: 100%;
}

.tblockstamp {
  width: 100%;
  border: 2px solid white;
  border-right: 0px;
  border-left: 1px solid white;
  border-radius: 0px;
  grid-area: tblockstamp;
  background-color: rgb(34, 169, 202);
  height: 100%;
}

.tlocaltime {
  width: 100%;
  border: 2px solid white;
  border-right: 0px;
  border-left: 1px solid white;
  border-radius: 0px;
  grid-area: tlocaltime;
  background-color: rgb(34, 169, 202);
  height: 100%;
}

.tgasprice {
  width: 100%;
  border: 2px solid white;
  border-right: 0px;
  border-left: 1px solid white;
  border-radius: 0px;
  grid-area: tgasprice;
  background-color: rgb(34, 169, 202);
  height: 100%;
}

.blockheight {
  width: 100%;
  border: 2px solid white;
  border-left: 0px;
  border-right: 1px solid white;
  border-radius: 0px;
  grid-area: blockheight;
  height: 100%;
}

.blockstamp {
  width: 100%;
  border: 2px solid white;
  border-left: 0px;
  border-right: 1px solid white;
  border-radius: 0px;
  grid-area: blockstamp;
  height: 100%;
}

.localtime {
  width: 100%;
  border: 2px solid white;
  border-left: 0px;
  border-right: 1px solid white;
  border-radius: 0px;
  grid-area: localtime;
  height: 100%;
}

.gasprice {
  width: 100%;
  border: 2px solid white;
  border-left: 0px;
  border-right: 2px solid white;
  border-radius: 0px;
  grid-area: gasprice;
  height: 100%;
}

.list {
  width: 100%;
  display: grid;
  grid-area: list;
  height: 100%;
  border: 0px solid white;
  border-radius: 0px;
  min-height: calc(100vh - 50px);
}

.mainView {
  width: 100%;
  grid-area: list;
  border: 2px solid white;
  border-radius: 0px;
  height: 100%;
  min-height: calc(100vh - 130px); 
}

.TransferLayout {
  display: grid;
  /*overflow-y: scroll; */
  width: 100%;
  height: 100%;
  max-height: calc(100vh - 135px);
  grid-template-columns: 1fr 100px;
  grid-template-rows: 100px 2fr 7fr 1fr;
  grid-template-areas: 
    "TransferTo ToAvatar"
    "TxObj TxObj"
    "TxList TxList"
    "TxClick TxClick";
}

.TransferTo {
  width: 100%;
  height: 100%;
  font-size: 24px;
  grid-area: TransferTo;
}

.ToAvatar {
  border: 2px soild white;
  width: 100%;
  height: 100%;
  grid-area: ToAvatar;
  background-color: rgba(155,155,155,0.33);
}

.TxObj {
  width: 100%;
  height: 100%;
  font-size: 24px;
  grid-area: TxObj;
}

.TransferClicks {
  grid-area: TxClick;
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
}

.TQList {
  overflow-y: scroll;
  padding-left: 6px;
  border: 2px solid white;
  width: 100%;
  min-height: calc(100vh - 400px);
  max-height: calc(100vh - 400px);
  font-size: 18px;
  font-family: digits;
  grid-area: TxList;
  text-align: center;
  background-color: rgba(0, 0, 0, 0.11);
}

.TQList tr:nth-child(odd) {
  background-color: rgb(34, 169, 202);
}

.TQList tr:nth-child(even) {
  background-color: rgb(12, 96, 117);
}

.address {
  height: 100%;
  grid-area: address;
  display: grid;
  grid-template-columns: 100px 1fr 50px;
  grid-template-rows: 1fr 1fr;
  grid-template-areas:
    "icon dropdown copyAddr"
    "icon qbalance qbalance";
    grid-gap: 5px;
}

.copyAddr {
  grid-area: copyAddr;
  width: 100%;
  background: url("./assets/copy.png");
}

.avatar {
  grid-area: icon;
  border: 4px solid rgba(255,255,255,0.73);
  background-color: rgba(155,155,155,0.33);
  border-radius: 25em; 
  width: 100%; 
  height: 100%;
  display: grid;
  justify-content: center;
  align-items: center;
}

.quickbalance {
  display: grid;
  grid-area: qbalance;
  grid-template-columns: 1fr 2fr 1fr 2fr;
  grid-template-areas: 
    "titleEth balanceEth titleERC20 balanceERC20";
  height: 100%;
}

.teth {
  grid-area: titleEth;
  background-color: none;
  border: 0px solid white;
  border-radius: 0px;
  border-right: 0px;
}

.terc20 {
  grid-area: titleERC20;
  background-color: none;
  border: 0px solid white;
  border-right: 0px;
  border-left: 0px solid white;
  border-radius: 0px;
}

.dropdown {
  grid-area: dropdown;
  display: grid;
  justify-content: center;
  align-items: center;
  border: 5px solid rgba(0,0,0,0.03);
  height: 100%;
  width: 100%;
}

.berc20 {
  grid-area: balanceERC20;
  width: 100%;
  border: 5px solid rgba(0, 0, 0, 0);
}

.beth {
  grid-area: balanceEth;
  border: 2px solid rgba(0, 0, 0, 0);
  border-radius: 0px;
}

.action {
  grid-area: action;
  min-height: calc(100vh - 130px);
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr 30px 30px 30px 30px;
  grid-gap: 10px;
  grid-template-areas:
    "."
    "receipts"
    "drawer"
    "settings"
    "logout";
}

.logout {
  grid-area: logout;
}

.settings {
  grid-area: settings;
}

.drawer {
  grid-area: drawer;
}

.receipts {
  grid-area: receipts;
}

.ReceiptsLayout {
  grid-area: list;
  width: 100%;
  height: 100%;
  max-height: calc(100vh - 135px);
  grid-template-columns: 200px 2fr minmax(400px, 1fr);
  grid-template-rows: 50px 1fr;
  grid-template-areas: 
    "RLabel . ReceiptsDrop"
    "ReceiptContainer ReceiptContainer ReceiptContainer";
}

.RLabel {
  grid-area: RLabel;
}

.ReceiptsDrop {
  justify-content: center;
  align-items: center;
  grid-area: ReceiptsDrop;
}

.ReceiptContainer {
  grid-area: ReceiptContainer;
  display: grid;
  width: 100%;
  height: 100%;
  grid-template-rows: 1fr 50px;
  grid-template-rows: 1fr;
  grid-template-areas: 
    "ReceiptMainTable"
    "ReceiptToolTipArea";
}

.ReceiptMainTable {
  width: 100%;
  font-size: 18px;
  grid-area: ReceiptMainTable;
  overflow-y: scroll;
  padding-left: 6px;
  font-family: digits;
  color: white;
  text-align: center;
}

.ReceiptMainTable tr:nth-child(odd) {
  background-color: #ffc600;
  color: black;
}

.ReceiptMainTable tr:nth-child(even) {
  background-color: #a58307
}

.ReceiptToolTipArea {
  grid-area: ReceiptToolTipArea;
  justify-content: center;
  text-align: center;
  border-top: 2px solid white;
}

.ReceiptToolTipArea input {
  margin: 15px; 
  font-family: digits;
  border: 0px;
  background-color: rgba(0, 0, 0, 0);
  width: 90%; 
  font-size: 16px;
  text-align: center;
  color: white;
}

.SettingView {
  display: grid;
  border: 2px solid white;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  grid-template-areas: "settingInner";
  overflow: hidden;
  height: 95%;
  background-color: rgba(0, 0, 0, 0);
  border-radius: 0px;
}

.SettingTabs {
  text-align: center;
  border: 0px;
  border-radius: 0px;
  padding: 0px;
  background-color: rgba(0, 0, 0, 0);
}

.SettingInner {
  grid-area: settingInner;
  height: 95%;
  background-color: rgba(0, 0, 0, 0);
  border: 0px;
  overflow-y: scroll;
  padding-left: 6px;
}

.accMgr {
  background-color: rgba(0, 0, 0, 0);
  border: 0px;
}

.accSettings {
  border: 2px solid white;
  background-color: rgba(0, 0, 0, 0);
  width: 100%;
  height: 100%;
}

.accTabs {
  border: 0px;
  background-color: rgba(0, 0, 0, 0);
}

.newAccTab {
  border: 0px;
  background-color: rgba(0, 0, 0, 0);
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr;
  grid-template-areas: 
    "natitle natitle"
    "nafile nafile"
    "napass napass"
    "breveal bcreate";
}

.nafile {
  grid-area: nafile;
}

.natitle {
  font-size: 24px;
  align-self: center;
  justify-self: center;
  grid-area: natitle;
}

.napass {
  justify-self: center;
  grid-area: napass;
  width: 70%;
  background-color: rgba(0,0,0,0.09);
  border: 2px solid white;
  font-size: 20px;
  color: white;
}

.nawaiting {
  font-size: 35px;
  align-self: center;
  justify-self: center;
}

.nareveal {
  margin: 15px;
  align-self: center;
  justify-self: center;
  grid-area: breveal;
}

.nacreate {
  margin: 15px;
  align-self: center;
  justify-self: center;
  grid-area: bcreate;
}

/* React Dropdown */
.Dropdown-root {
  position: relative;
  width: 100%;
  display: inline-block;
  font-family: Arial;
  font-size: 16px;
}

.Dropdown-control {
  position: relative;
  overflow: hidden;
  background-color: white;
  border: 1px solid #ccc;
  border-radius: 2px;
  box-sizing: border-box;
  color: #333;
  cursor: default;
  outline: none;
  padding: 8px 52px 8px 10px;
  transition: all 200ms ease;
}

.Dropdown-control:hover {
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);
}

.Dropdown-arrow {
  border-color: #999 transparent transparent;
  border-style: solid;
  border-width: 5px 5px 0;
  content: ' ';
  display: block;
  height: 0;
  margin-top: -ceil(2.5);
  position: absolute;
  right: 10px;
  top: 14px;
  width: 0
}

.is-open .Dropdown-arrow {
  border-color: transparent transparent #999;
  border-width: 0 5px 5px;
}

.Dropdown-menu {
  background-color: white;
  border: 1px solid #ccc;
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.06);
  box-sizing: border-box;
  margin-top: -1px;
  max-height: 200px;
  overflow-y: auto;
  position: absolute;
  top: 100%;
  width: 100%;
  z-index: 1000;
  -webkit-overflow-scrolling: touch;
}

.Dropdown-menu .Dropdown-group > .Dropdown-title{
  padding: 8px 10px;
  color: rgba(51, 51, 51, 1);
  font-weight: bold;
  text-transform: capitalize;
}

.Dropdown-option {
  box-sizing: border-box;
  color: rgba(51, 51, 51, 0.8);
  cursor: pointer;
  display: block;
  padding: 8px 10px;
}

.Dropdown-option:last-child {
  border-bottom-right-radius: 2px;
   border-bottom-left-radius: 2px;
}

.Dropdown-option:hover {
  background-color: #f2f9fc;
  color: #333;
}

.Dropdown-option.is-selected {
  background-color: #f2f9fc;
  color: #333;
}

.Dropdown-noresults {
  box-sizing: border-box;
  color: #ccc;
  cursor: default;
  display: block;
  padding: 8px 10px;
}

/* normal button style */
.card {
  width: 96px;
  height: 96px;
  padding: 2px;
  margin: 12px 12px;
  background-color: rgba(200,200,200,0.5);
  text-align: center;
  color: #FFF;
  position: relative;
  display: inline-block;
  border-radius: 8px;
  font-size: 18px;
}
/* button hover style if required */
.card:hover {
  transition-duration: 0.4s;
  box-shadow: rgba(20,20,20,0.5) 15px 18px 6px;
}
/* generated element for shine effect.
* normal state is semi-transparent
* white but with zero width. Set no
* transition here for no mouse-leave
* animations. Otherwise the effect
* will play in reverse when your mouse
* leaves the element
*/
.card:after {
  content: "";
  position: absolute;
  top: 0px;
  left: 0px;
  width: 0%;
  height: 100%;
  background-color: rgba(255,255,255,0.4);
  -webkit-transition: none;
  -moz-transition: none;
  -ms-transition: none;
  -o-transition: none;
  transition: none;
 
}
/* on hover we animate the width to
* 100% and opacity to 0 so the element
* grows and fades out
*/
.card:hover:after {
  width: 120%;
  background-color: rgba(255,255,255,0);
  -webkit-transition: all 0.3s ease-out;
  -moz-transition: all 0.3s ease-out;
  -ms-transition: all 0.3s ease-out;
  -o-transition: all 0.3s ease-out;
  transition: all 0.3s ease-out;
}

.card:not(:hover){
  transition-duration: 0.4s;
}

.label-soon {
  position: absolute;
  bottom: 16px;
  left: 4px;
  font-weight: bolder;
  color: #fff815;
  font-size: 1.1em;
  padding: 2px 10px;
  transform: rotate(-30deg);
  border: 1px solid #fff815;
}

/* default button style */
.button {
  background-color: rgba(0, 0, 0, 0);
  border: 2px solid white;
  color: white;
  padding: 2px 4px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 2px 1px;
  cursor: pointer;
  max-width: fit-content;
}

.button:disabled {
  border: 2px solid black;
  color: black;
}

.button:hover {
  background-color: rgb(34, 169, 202);
}

.xbutton:hover {
  background-color: red;
  color: black;
  font-weight: bold;
  border: 2px solid pink;
}

.sbutton {
  max-width: 100%;
  min-height: 100%;
}

.sbutton:hover {
  background-color: var(--yellow);
  color: black;
}

.sendbutton:hover {
  background-color: white;
  color: black;
}

.tabset {
  margin-bottom: 12px;
}

.loader {
  border: 6px solid #f3f3f3; /* Light grey */
  border-top: 6px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 20px;
  max-width: 20px;
  height: 20px;
  margin: 0px;
  padding: 0px;
  animation: spin 2s linear infinite;
  display: inline-block;
}

/* Custom Modal layout */
.confirmModal {
  display: grid;
  grid-template-columns: "1fr 1fr";
  grid-template-rows: "1fr";
  grid-template-areas: "confirm cancel";
  justify-items: center;
  align-items: center;
  text-align: center;
}